{"version":3,"sources":["Circle.js","Wheel.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["Circle","react_default","a","createElement","className","style","backgroundColor","this","props","borderColor","borderRadius","radius","width","height","children","Component","defaultProps","Wheel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","beat","setState","state","active","slice","includes","index","indexOf","splice","push","sort","b","objectSpread","audioContext","playing","initialState","playOrPause","bind","assertThisInitialized","scheduler","path","_this2","soundObject","getSound","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","soundToPlay","send","play","time","volume","createGain","gain","value","sound","playSound","createBufferSource","connect","destination","start","futureTickTime","currentTime","playOrNot","futureTick","timeout","window","setTimeout","current","soundBuffer","AudioContext","soundLoader","url","clearTimeout","noteLength","bpm","subdivisions","subdivision","angle","Math","PI","x","sin","y","cos","_this3","lines","lineIndexes","i","length","coords","pointCoords","prevCoords","key","x1","y1","x2","y2","stroke","strokeWidth","position","padding","display","pointerEvents","top","left","zIndex","smallRadius","src_Circle_0","Array","from","_","cursor","onClick","map","Player","drums","hihat","kick","snare","React","createRef","margin","textAlign","src_Wheel","ref","process","clear","fontSize","App","src_Player","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d17b83d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './Circle.css';\n\nclass Circle extends Component {\n  render() {\n    return <div className=\"Circle\" style={{\n      backgroundColor: this.props.backgroundColor,\n      borderColor: this.props.borderColor,\n      borderRadius: this.props.radius,\n      width: this.props.radius,\n      height: this.props.radius\n    }}>{this.props.children}</div>;\n  }\n}\n\nCircle.defaultProps = {\n  backgroundColor: 'transparent',\n  borderColor: '#000',\n  radius: '100px'\n};\n\nexport default Circle;\n","import React, { Component } from 'react';\n\nimport Circle from './Circle';\n\nconst smallRadius = 2;\nconst padding = 10;\n\nclass Wheel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.audioContext = null;\n    this.playing = false;\n    this.state = {\n      active: [],\n      ...props.initialState\n    };\n\n    this.playOrPause = this.playOrPause.bind(this);\n    this.scheduler = this.scheduler.bind(this);\n  }\n\n  soundLoader(path) {\n    var soundObject = {};\n    var getSound = new XMLHttpRequest();\n\n    getSound.open('GET', path, true);\n    getSound.responseType = 'arraybuffer';\n    getSound.onload = () => {\n      this.audioContext.decodeAudioData(getSound.response, (buffer) => {\n        soundObject.soundToPlay = buffer;\n      });\n    }\n    getSound.send();\n\n    soundObject.play = (time) => {\n      var volume = this.audioContext.createGain();\n      volume.gain.value = this.props.sound.volume;\n      var playSound = this.audioContext.createBufferSource();\n      playSound.buffer = soundObject.soundToPlay;\n\n      // Volume control\n      playSound.connect(volume);\n      volume.connect(this.audioContext.destination);\n      playSound.start(time);\n    }\n\n    return soundObject;\n  }\n\n  scheduler() {\n    while (this.futureTickTime < this.audioContext.currentTime + 0.1) {\n      this.playOrNot();\n      this.futureTick();\n    }\n    this.timeout = window.setTimeout(this.scheduler, 50.0);\n  }\n\n  playOrNot() {\n    if (!this.state.active.includes(this.current)) {\n      return;\n    }\n    this.soundBuffer.play(this.futureTickTime);\n  }\n\n  playOrPause() {\n    if (this.props.sound && !this.audioContext) {\n      this.audioContext = new AudioContext();\n      this.soundBuffer = this.soundLoader(this.props.sound.url);\n    }\n\n    this.playing = !this.playing;\n    if (this.playing) {\n      this.current = 0;\n      this.futureTickTime = this.audioContext.currentTime;\n      this.scheduler();\n    } else {\n      window.clearTimeout(this.timeout);\n    }\n  }\n\n  futureTick() {\n    var noteLength = 60 / this.props.bpm;\n    this.futureTickTime += 0.25 * noteLength;\n    this.current = (this.current + 1) % (this.props.subdivisions);\n  }\n\n  pointCoords(subdivision) {\n    const angle = (Math.PI * 2) / this.props.subdivisions * subdivision;\n    const x = this.props.radius / 2 - smallRadius + Math.sin(angle) * (this.props.radius + smallRadius) / 2 + padding;\n    const y = this.props.radius / 2 - smallRadius + Math.cos(angle) * (this.props.radius + smallRadius) / 2 + padding;\n\n    return {x, y};\n  }\n\n  handleClick = (beat) => {\n    this.setState((state) => {\n      let active = state.active.slice();\n      if (active.includes(beat)) {\n        const index = active.indexOf(beat);\n        active.splice(index, 1);\n      } else {\n        active.push(beat);\n        active.sort((a, b) => a - b);\n      }\n      return {...state, active};\n    });\n  }\n\n  render() {\n    let lines = [];\n    let lineIndexes = this.state.active.slice();\n    lineIndexes.push(lineIndexes[0]);\n    for (let i = 1; i < lineIndexes.length; i++) {\n      const coords = this.pointCoords(lineIndexes[i]);\n      const prevCoords = this.pointCoords(lineIndexes[i - 1]);\n      lines.push(<line key={'line' + i} x1={coords.x} y1={coords.y} x2={prevCoords.x} y2={prevCoords.y} stroke='black' strokeWidth='2' />);\n    }\n\n    return <div style={{position: 'relative', padding: padding + 'px', display: 'inline-block'}}>\n      <svg style={{pointerEvents: 'none', position: 'absolute', top: padding / 2 + 'px', left: padding / 2 + 'px', zIndex: 100}} width={this.props.radius + smallRadius * 4} height={this.props.radius + smallRadius * 4}>\n        {lines}\n      </svg>\n      <Circle borderColor='white' radius={this.props.radius + 'px'}>{Array.from({length: this.props.subdivisions}, (_, i) => {\n      const coords = this.pointCoords(i);\n      return <div key={'refCircle' + i} style={{\n        cursor: 'pointer',\n        position: 'absolute',\n        top: coords.y + 'px',\n        left: coords.x + 'px'\n      }} onClick={this.handleClick.bind(this, i)}>\n        <Circle borderColor='white' backgroundColor='white' radius={(smallRadius * 2) + 'px'}/>\n      </div>\n      })}</Circle>\n      {this.state.active.map(i => {\n        const coords = this.pointCoords(i);\n        return <div key={'beatCircle' + i} style={{\n          position: 'absolute',\n          top: coords.y + 'px',\n          left: coords.x + 'px',\n          pointerEvents: 'none'\n        }}>\n          <Circle borderColor='black' backgroundColor='black' radius={(smallRadius * 2) + 'px'}/>\n        </div>\n      })}\n    </div>;\n  }\n}\n\nWheel.defaultProps = {\n  subdivisions: 16,\n  radius: 200\n};\n\nexport default Wheel;\n","import React, { Component } from 'react';\n\nimport Wheel from './Wheel';\n\nclass Player extends Component {\n  constructor() {\n    super();\n\n    this.state = {playing: false};\n    this.drums = {\n      hihat: React.createRef(),\n      kick: React.createRef(),\n      snare: React.createRef()\n    };\n  }\n\n  handleClick = () => {\n    this.setState((state) => {\n      return {...state, playing: !state.playing};\n    });\n\n    this.drums.hihat.current.playOrPause();\n    this.drums.kick.current.playOrPause();\n    this.drums.snare.current.playOrPause();\n  }\n\n  render() {\n    return <div style={{margin: '50px auto 0 auto', width: '800px', textAlign: 'center'}}>\n      <Wheel ref={this.drums.kick}\n             initialState={{active: [0, 8]}}\n             bpm={120} sound={{\n               volume: 100,\n               url: process.env.PUBLIC_URL + '/sounds/kick.mp3'\n             }}/>\n      <Wheel ref={this.drums.snare}\n             initialState={{active: [4, 12]}}\n             bpm={120} sound={{\n               volume: 100,\n               url: process.env.PUBLIC_URL + '/sounds/snare.mp3'\n             }}/>\n      <Wheel ref={this.drums.hihat}\n             initialState={{active: [0, 2, 4, 6, 8, 10, 12, 14, 16]}}\n             bpm={120} sound={{\n               volume: 80,\n               url: process.env.PUBLIC_URL + '/sounds/hat.mp3'\n             }}/>\n      <button style={{clear: 'both', display: 'block', margin: '0 auto', position: 'relative', top: '20px', fontSize: '20px'}} onClick={this.handleClick}>{this.state.playing ? 'Pause' : 'Play'}</button></div>;\n  }\n}\n\nexport default Player;\n","import React from 'react';\n\nimport Player from './Player';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Player/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}