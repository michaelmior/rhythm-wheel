{"version":3,"sources":["Circle.js","Wheel.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["Circle","react_default","a","createElement","className","style","backgroundColor","this","props","borderColor","borderRadius","radius","width","height","position","children","Component","defaultProps","Wheel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","beat","setState","state","active","slice","includes","index","indexOf","splice","push","sort","b","objectSpread","audioContext","playing","initialState","playOrPause","bind","assertThisInitialized","scheduler","bounce","React","createRef","refCircle","soundBuffer","soundLoader","sound","url","wait","track","MidiWriter","Track","setTempo","bpm","i","subdivisions","addEvent","NoteEvent","channel","pitch","instrument","duration","Array","fill","path","_this2","soundObject","getSound","XMLHttpRequest","open","responseType","onload","response","send","play","time","volume","createGain","gain","value","playSound","createBufferSource","buffer","soundToPlay","connect","destination","start","_this3","window","requestAnimationFrame","updateBounce","futureTickTime","currentTime","playOrNot","futureTick","timeout","setTimeout","_this4","current","setAttribute","_this5","AudioContext","decodeAudioData","startTickTime","webkitAnimationPlayState","clearTimeout","coords","pointCoords","top","y","left","x","noteLength","subdivision","angle","Math","PI","sin","cos","padding","_this6","lines","lineIndexes","length","prevCoords","key","x1","y1","x2","y2","stroke","strokeWidth","smallRadius","ref","src_Circle_0","from","_","cursor","onClick","map","pointerEvents","name","Player","handleExportClick","tracks","keys","drums","inst","exportTrack","write","Writer","download","dataUri","handlePlayClick","hasPlayed","crash","preparePlay","hihat","kick","snare","filename","data","element","document","display","body","appendChild","click","removeChild","textAlign","transform","src_Wheel_0","process","float","icon","exportIcon","color","App","GithubCorner_default","href","src_Player_0","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.702d3a48.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './Circle.css';\n\nclass Circle extends Component {\n  render() {\n    return <div className='Circle' style={{\n      backgroundColor: this.props.backgroundColor,\n      borderColor: this.props.borderColor,\n      borderRadius: this.props.radius,\n      width: this.props.radius,\n      height: this.props.radius,\n      position: 'relative'\n    }}>{this.props.children}</div>;\n  }\n}\n\nCircle.defaultProps = {\n  backgroundColor: 'transparent',\n  borderColor: '#000',\n  radius: '100px'\n};\n\nexport default Circle;\n","import React, { Component } from 'react';\n\nimport MidiWriter from 'midi-writer-js';\n\nimport Circle from './Circle';\n\nimport './Wheel.css';\n\nconst smallRadius = 2;\nconst padding = 10;\n\nclass Wheel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.audioContext = null;\n    this.playing = false;\n    this.state = {\n      active: [],\n      ...props.initialState\n    };\n\n    this.playOrPause = this.playOrPause.bind(this);\n    this.scheduler = this.scheduler.bind(this);\n    this.bounce = React.createRef();\n    this.refCircle = React.createRef();\n  }\n\n  componentDidMount() {\n    this.soundBuffer = this.soundLoader(this.props.sound.url);\n  }\n\n  exportTrack() {\n    let wait = 0;\n    const track = new MidiWriter.Track();\n    track.setTempo(this.props.bpm);\n    for (let i = 0; i < this.props.subdivisions; i++) {\n      if (this.state.active.includes(i)) {\n        track.addEvent(new MidiWriter.NoteEvent({\n          channel: 10,\n          pitch: this.props.sound.instrument,\n          duration: '16',\n          wait: Array(wait).fill('16')\n        }))\n        wait = 0;\n      } else {\n        wait += 1;\n      }\n    }\n    return track;\n  }\n\n  soundLoader(path) {\n    var soundObject = {};\n    var getSound = new XMLHttpRequest();\n\n    // Fetch the audio file\n    getSound.open('GET', path, true);\n    getSound.responseType = 'arraybuffer';\n    getSound.onload = () => {\n      soundObject.response = getSound.response;\n    }\n    getSound.send();\n\n    // Construct a play function which sets volume\n    soundObject.play = (time) => {\n      var volume = this.audioContext.createGain();\n      volume.gain.value = this.props.sound.volume;\n      var playSound = this.audioContext.createBufferSource();\n      playSound.buffer = soundObject.soundToPlay;\n\n      // Volume control\n      playSound.connect(volume);\n      volume.connect(this.audioContext.destination);\n      playSound.start(time);\n    }\n\n    return soundObject;\n  }\n\n  scheduler() {\n    window.requestAnimationFrame(() => this.updateBounce());\n    while (this.futureTickTime < this.audioContext.currentTime + 0.1) {\n      this.playOrNot();\n      this.futureTick();\n    }\n    this.timeout = window.setTimeout(this.scheduler, 50.0);\n  }\n\n  playOrNot() {\n    if (!this.state.active.includes(this.current)) {\n      return;\n    }\n\n    this.refCircle.current.setAttribute('class', 'pulse-anim');\n    window.setTimeout(() => {\n      this.refCircle.current.setAttribute('class', '');\n    }, 100);\n\n    this.soundBuffer.play(this.futureTickTime);\n  }\n\n  preparePlay() {\n    if (this.props.sound && !this.audioContext) {\n      this.audioContext = new AudioContext();\n      this.audioContext.decodeAudioData(this.soundBuffer.response, (buffer) => {\n        this.soundBuffer.soundToPlay = buffer;\n        this.soundBuffer.response = null;\n      });\n    }\n  }\n\n  playOrPause() {\n    this.playing = !this.playing;\n    this.startTickTime = this.audioContext.currentTime;\n    if (this.playing) {\n      this.current = 0;\n      this.futureTickTime = this.audioContext.currentTime;\n      this.scheduler();\n      this.bounce.current.style.webkitAnimationPlayState = 'running';\n    } else {\n      this.bounce.current.style.webkitAnimationPlayState = 'paused';\n      this.updateBounce();\n      window.clearTimeout(this.timeout);\n    }\n  }\n\n  updateBounce() {\n    // Calculate the new position of the bouncing ball and move it\n    const coords = this.pointCoords(\n      (this.audioContext.currentTime - this.startTickTime) *\n        (this.props.bpm / 15) % this.props.subdivisions);\n\n    this.bounce.current.style.top = coords.y + 'px';\n    this.bounce.current.style.left = coords.x + 'px';\n  }\n\n  futureTick() {\n    // Calculate the next time a beat will occur\n    var noteLength = 60 / this.props.bpm;\n    this.futureTickTime += 0.25 * noteLength;\n    this.current = (this.current + 1) % (this.props.subdivisions);\n  }\n\n  pointCoords(subdivision) {\n    const angle = (Math.PI * 2) / this.props.subdivisions * subdivision;\n    const x = this.props.radius / 2 - smallRadius + Math.sin(angle) * (this.props.radius + smallRadius) / 2 + padding;\n    const y = this.props.radius - (this.props.radius / 2 - smallRadius + Math.cos(angle) * (this.props.radius + smallRadius) / 2) + padding / 2;\n\n    return {x, y};\n  }\n\n  handleClick = (beat) => {\n    this.setState((state) => {\n      let active = state.active.slice();\n      if (active.includes(beat)) {\n        // Remove an existing beat\n        const index = active.indexOf(beat);\n        active.splice(index, 1);\n      } else {\n        // Add a new beat and re-sort\n        active.push(beat);\n        active.sort((a, b) => a - b);\n      }\n      return {...state, active};\n    });\n  }\n\n  render() {\n    // Generate lines connecting beats\n    let lines = [];\n\n    // Make a copy of the active lines so we can add\n    // the first one twice to connect in a circle\n    let lineIndexes = this.state.active.slice();\n    lineIndexes.push(lineIndexes[0]);\n\n    // Starting with the second beat, draw lines connecting to the previous\n    for (let i = 1; i < lineIndexes.length; i++) {\n      const coords = this.pointCoords(lineIndexes[i]);\n      const prevCoords = this.pointCoords(lineIndexes[i - 1]);\n      lines.push(<line key={'line' + i}\n                       x1={coords.x}\n                       y1={coords.y}\n                       x2={prevCoords.x}\n                       y2={prevCoords.y}\n                       stroke='black'\n                       strokeWidth='2' />);\n    }\n\n    const coords = this.pointCoords(0);\n    return <div className='Wheel' style={{padding: padding + 'px'}}>\n      {/* Add an SVG with lines connecting active beats */}\n      <svg className='beat-lines'\n           style={{top: padding / 2 + 'px', left: padding / 2 + 'px'}}\n           width={this.props.radius + smallRadius * 4}\n           height={this.props.radius + smallRadius * 4}>\n        {lines}\n      </svg>\n\n      {/* Bouncing ball indicating position */}\n      <div ref={this.bounce}\n           className='bounce'\n           style={{top: coords.y + 'px', left: coords.x + 'px'}}>\n        <Circle borderColor='goldenrod'\n                backgroundColor='goldenrod'\n                radius={(smallRadius * 2) + 'px'}/>\n      </div>\n\n      {/* Add the outer reference circle */}\n      <div ref={this.refCircle}>\n        <Circle borderColor='white'\n                radius={this.props.radius + 'px'}>\n          {Array.from({length: this.props.subdivisions}, (_, i) => {\n            // Add each smaller circle indicating beats\n            const coords = this.pointCoords(i);\n            return <div key={'refCircle' + i} style={{\n              cursor: 'pointer',\n              position: 'absolute',\n              top: (coords.y - padding - smallRadius * 1.6) + 'px',\n              left: (coords.x - padding - smallRadius * 1.5) + 'px'\n            }} onClick={this.handleClick.bind(this, i)}>\n              <Circle borderColor='white'\n                      backgroundColor='white'\n                      radius={(smallRadius * 2) + 'px'}/>\n            </div>\n          })}\n        </Circle>\n      </div>\n\n      {/* Add darker circles indicating active beats */}\n      {this.state.active.map(i => {\n        const coords = this.pointCoords(i);\n        return <div key={'beatCircle' + i} style={{\n          position: 'absolute',\n          top: coords.y + 'px',\n          left: coords.x + 'px',\n          pointerEvents: 'none'\n        }}>\n          <Circle borderColor='black'\n                  backgroundColor='black'\n                  radius={(smallRadius * 2) + 'px'}/>\n        </div>\n      })}\n\n      <div className='name'>{this.props.sound.name}</div>\n    </div>;\n  }\n}\n\nWheel.defaultProps = {\n  subdivisions: 16,\n  radius: 200\n};\n\nexport default Wheel;\n","import React, { Component } from 'react';\n\nimport MidiWriter from 'midi-writer-js';\nimport { Icon } from \"@iconify/react\";\nimport exportIcon from '@iconify/icons-uil/export';\n\nimport Wheel from './Wheel';\n\nimport './Player.css';\n\nclass Player extends Component {\n  constructor() {\n    super();\n\n    this.hasPlayed = false;\n    this.state = {playing: false};\n    this.drums = {\n      crash: React.createRef(),\n      hihat: React.createRef(),\n      kick: React.createRef(),\n      snare: React.createRef()\n    };\n  }\n\n  handleExportClick = () => {\n    const tracks = Object.keys(this.drums).map(inst =>\n      this.drums[inst].current.exportTrack()\n    );\n    const write = new MidiWriter.Writer(tracks);\n    this.download('groove.mid', write.dataUri());\n  }\n\n  download(filename, data) {\n    const element = document.createElement('a');\n    element.setAttribute('href', data);\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  handlePlayClick = () => {\n    this.setState((state) => {\n      return {...state, playing: !state.playing};\n    });\n\n    if (this.hasPlayed) {\n      this.play();\n    } else {\n      this.drums.crash.current.preparePlay();\n      this.drums.hihat.current.preparePlay();\n      this.drums.kick.current.preparePlay();\n      this.drums.snare.current.preparePlay();\n\n      window.setTimeout(this.play, 100);\n    }\n  }\n\n  play = () => {\n    this.hasPlayed = true;\n\n    this.drums.crash.current.playOrPause();\n    this.drums.hihat.current.playOrPause();\n    this.drums.kick.current.playOrPause();\n    this.drums.snare.current.playOrPause();\n  }\n\n  render() {\n    return <div className='Player' style={{width: '1000px', textAlign: 'center', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n      <Wheel ref={this.drums.crash}\n             initialState={{active: [0]}}\n             bpm={120} sound={{\n               name: 'Crash',\n               volume: 10,\n               instrument: 49,\n               url: process.env.PUBLIC_URL + '/sounds/crash.mp3'\n             }}/>\n      <Wheel ref={this.drums.kick}\n             initialState={{active: [0, 8]}}\n             bpm={120} sound={{\n               name: 'Kick',\n               volume: 10,\n               instrument: 35,\n               url: process.env.PUBLIC_URL + '/sounds/kick.mp3'\n             }}/>\n      <Wheel ref={this.drums.snare}\n             initialState={{active: [4, 12]}}\n             bpm={120} sound={{\n               name: 'Snare',\n               volume: 10,\n               instrument: 38,\n               url: process.env.PUBLIC_URL + '/sounds/snare.mp3'\n             }}/>\n      <Wheel ref={this.drums.hihat}\n             initialState={{active: [0, 2, 4, 6, 8, 10, 12, 14, 16]}}\n             bpm={120} sound={{\n               name: 'Hi-Hat',\n               volume: 8,\n               instrument: 42,\n               url: process.env.PUBLIC_URL + '/sounds/hat.mp3'\n             }}/>\n      <button onClick={this.handlePlayClick}>{this.state.playing ? 'Stop' : 'Play'}</button>\n      <div style={{cursor: 'pointer', float: 'right'}} onClick={this.handleExportClick}>\n        <Icon icon={exportIcon} color='white'/>\n      </div>\n      </div>;\n  }\n}\n\nexport default Player;\n","import React from 'react';\n\nimport GithubCorner from 'react-github-corner';\n\nimport Player from './Player';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GithubCorner href=\"https://github.com/michaelmior/rhythm-wheel\" />\n      <Player/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}